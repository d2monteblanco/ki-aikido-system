#!/usr/bin/env python3
"""
Migra√ß√£o para adicionar tabelas de status/gradua√ß√£o dos membros
"""

import os
import sys

# Adicionar o diret√≥rio pai ao path
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.dirname(__file__))))

from src.main import app
from src.models import db, MemberStatus, MemberGraduation, MemberQualification

def run_migration():
    """Executa a migra√ß√£o para criar as novas tabelas"""
    with app.app_context():
        print("Iniciando migra√ß√£o para adicionar tabelas de status/gradua√ß√£o dos membros...")
        
        try:
            # Criar as novas tabelas
            db.create_all()
            print("‚úÖ Tabelas criadas com sucesso:")
            print("   - member_status")
            print("   - member_graduation") 
            print("   - member_qualification")
            
            # Verificar se as tabelas foram criadas
            inspector = db.inspect(db.engine)
            tables = inspector.get_table_names()
            
            required_tables = ['member_status', 'member_graduation', 'member_qualification']
            for table in required_tables:
                if table in tables:
                    print(f"‚úÖ Tabela '{table}' confirmada")
                else:
                    print(f"‚ùå Tabela '{table}' n√£o encontrada")
            
            print("\nüéâ Migra√ß√£o conclu√≠da com sucesso!")
            print("\nPr√≥ximos passos:")
            print("1. Reiniciar a aplica√ß√£o")
            print("2. Acessar /api/member-status/constants para ver as constantes dispon√≠veis")
            print("3. Come√ßar a cadastrar status de membros atrav√©s da API")
            
        except Exception as e:
            print(f"‚ùå Erro durante a migra√ß√£o: {str(e)}")
            return False
    
    return True

if __name__ == '__main__':
    success = run_migration()
    sys.exit(0 if success else 1)

