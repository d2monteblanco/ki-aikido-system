# Configuração Nginx para Sistema Ki Aikido
# Local: /etc/nginx/sites-available/ki-aikido

upstream ki_aikido_backend {
    server 127.0.0.1:5000 fail_timeout=10s max_fails=3;
}

server {
    listen 80;
    listen [::]:80;
    
    # Substitua pelo seu domínio ou IP da VM
    # server_name seu-dominio.com www.seu-dominio.com;
    server_name _;
    
    # Logs
    access_log /var/log/nginx/ki-aikido-access.log;
    error_log /var/log/nginx/ki-aikido-error.log;
    
    # Tamanho máximo de upload
    client_max_body_size 5M;
    
    # Servir frontend (arquivos estáticos)
    location / {
        root /opt/ki-aikido-system/frontend;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # Cache para arquivos estáticos
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Proxy para API backend
    location /api {
        proxy_pass http://ki_aikido_backend;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Websocket support (se necessário no futuro)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Não fazer buffer de respostas grandes
        proxy_buffering off;
    }
    
    # Servir arquivos de upload (documentos)
    location /uploads {
        alias /opt/ki-aikido-system/backend/src/uploads;
        
        # Segurança: apenas permitir certos tipos de arquivo
        location ~ \.(pdf|jpg|jpeg|png)$ {
            add_header Content-Disposition "inline";
        }
        
        # Negar acesso a outros tipos de arquivo
        location ~ {
            deny all;
        }
    }
    
    # Health check
    location /health {
        proxy_pass http://ki_aikido_backend/api/health;
        access_log off;
    }
    
    # Segurança: negar acesso a arquivos ocultos
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Segurança: negar acesso a arquivos de backup
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Configuração HTTPS (descomente após configurar SSL com Certbot)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     
#     server_name seu-dominio.com www.seu-dominio.com;
#     
#     # Certificados SSL (gerados pelo Certbot)
#     ssl_certificate /etc/letsencrypt/live/seu-dominio.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/seu-dominio.com/privkey.pem;
#     
#     # Configurações SSL modernas
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     
#     # HSTS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     
#     # Restante da configuração (igual ao bloco HTTP acima)
#     # ... copie aqui as mesmas configurações location do bloco HTTP
# }

# Redirecionar HTTP para HTTPS (descomente após configurar SSL)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name seu-dominio.com www.seu-dominio.com;
#     return 301 https://$server_name$request_uri;
# }
